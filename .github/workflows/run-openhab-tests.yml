name: Run OpenHAB 5 Tests

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mosquitto:
        image: eclipse-mosquitto:2.0.15
        ports:
          - "1883:1883"
        volumes:
          - ${{ github.workspace }}/.github/workflows/mosquitto.conf:/mosquitto/config/mosquitto.conf
        env:
          ALLOW_ANONYMOUS: "true"
        options: >-
          --health-cmd="mosquitto_pub -h localhost -t \$SYS/broker/uptime -m ''"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      openhab:
        image: openhab/openhab:5.0.0
        ports:
          - 8080:8080
          - 8443:8443
        env:
          OPENHAB_HTTP_PORT: "8080"
          OPENHAB_HTTPS_PORT: "8443"
          EXTRA_JAVA_OPTS: "-Duser.timezone=Europe/Berlin -Duser.language=de -Duser.region=DE -Djava.awt.headless=true"
        options: >-
          --health-cmd="wget --no-verbose --tries=1 --spider http://localhost:8080/rest/ || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          -v /tmp/openhab/logs/:/openhab/userdata/logs/
          -v /tmp/openhab/conf:/openhab/conf
          -v /tmp/openhab/addons:/openhab/addons

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Clean the working directory to avoid permission issues
        clean: true
        fetch-depth: 0

    - name: Set up service configurations
      run: |
        # Create OpenHAB config and log directories with proper permissions
        sudo mkdir -p /tmp/openhab/conf
        sudo mkdir -p /tmp/openhab/logs
        sudo chmod -R 777 /tmp/openhab
        
        # Copy the test configuration to the temporary directory
        cp -r "${{ github.workspace }}/run/conf_listen/lib/openhab/"* /tmp/openhab/conf/
        # Ensure all copied files are readable
        sudo chmod -R 755 /tmp/openhab/conf

    - name: Download OpenHAB addons
      run: |
        mkdir -p /tmp/openhab/addons
        wget -O /tmp/openhab/addons/org.openhab.binding.astro-5.0.0.jar https://openhab.jfrog.io/ui/native/libs-release-local/org/openhab/addons/bundles/org.openhab.binding.astro/5.0.0/org.openhab.binding.astro-5.0.0.jar

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v6
        
    - name: Install requirements
      run: |
        uv pip install .[all] --system
        uv pip install -r requirements_tests.txt --system
        
    - name: Wait for OpenHAB to be ready
      run: |
        echo "Waiting for OpenHAB to be ready..."
        for i in {1..30}; do
          if curl -s http://localhost:8080/rest/ > /dev/null; then
            echo "OpenHAB is ready!"
            break
          fi
          echo "Waiting for OpenHAB to be ready... ($i/30)"
          sleep 10
        done
        
    - name: Run HABApp tests
      id: habapp-tests
      run: |
        cd run/conf_listen
        python -m HABApp -c config.yml
      
    - name: Prepare log files
      if: always()
      run: |
        # Create structured log directory
        mkdir -p logs/HABApp logs/OpenHAB
        
        # Copy HABApp logs if they exist
        if [ -d "run/conf_listen/log/" ]; then
          cp -r run/conf_listen/log/* logs/HABApp/ 2>/dev/null || true
        fi
        
        # Copy OpenHAB logs if they exist
        if [ -d "/tmp/openhab/logs/" ]; then
          cp -r /tmp/openhab/logs/* logs/OpenHAB/ 2>/dev/null || true
        fi
        
        # List the contents for debugging
        find logs -type f | sort
    
    - name: Upload log files
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: logs
        path: logs/
        retention-days: 7
        if-no-files-found: warn
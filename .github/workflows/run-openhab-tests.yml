name: Run OpenHAB 5 Tests

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mosquitto:
        image: eclipse-mosquitto:2.0.15
        ports:
          - "1883:1883"
        env:
          ALLOW_ANONYMOUS: "true"
        options: >-
          --health-cmd="mosquitto_pub -h localhost -t \$SYS/broker/uptime -m ''"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      openhab:
        image: openhab/openhab:5.0.0
        ports:
          - 8080:8080
          - 8443:8443
        env:
          OPENHAB_HTTP_PORT: "8080"
          OPENHAB_HTTPS_PORT: "8443"
          EXTRA_JAVA_OPTS: "-Duser.timezone=Europe/Berlin -Duser.language=de -Duser.region=DE -Djava.awt.headless=true"
        options: >-
          --health-cmd="wget --no-verbose --tries=1 --spider http://localhost:8080/rest/ || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          -v /tmp/openhab/conf/services/:/openhab/conf/services/

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up service configurations
      run: |
        # Create OpenHAB config directory
        sudo mkdir -p /tmp/openhab/conf/services

        # Configure OpenHAB basic auth
        sudo mkdir -p /tmp/openhab/conf/services
        sudo tee /tmp/openhab/conf/services/runtime.cfg > /dev/null <<EOL
        org.openhab.restauth:allowBasicAuth=true
        org.openhab.restauth:trustedNetworks=127.0.0.1/32
        EOL
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v6
        
    - name: Install requirements
      run: uv pip install .[all] --system
        
    - name: Wait for OpenHAB to be ready
      run: |
        echo "Waiting for OpenHAB to be ready..."
        for i in {1..30}; do
          if curl -s http://localhost:8080/rest/ > /dev/null; then
            echo "OpenHAB is ready!"
            break
          fi
          echo "Waiting for OpenHAB to be ready... ($i/30)"
          sleep 10
        done
        
    - name: Run HABApp tests
      id: habapp-tests
      run: |
        cd run/conf_testing
        python -m HABApp -c config.yml
      
    - name: Collect OpenHAB logs
      if: always()
      run: |
        # Get the container ID of the OpenHAB service
        CONTAINER_ID=$(docker ps -qf "name=openhab")
        if [ -n "$CONTAINER_ID" ]; then
          # Create directory for OpenHAB logs
          mkdir -p openhab_logs
          # Copy logs from container to host
          docker cp $CONTAINER_ID:/openhab/userdata/logs/ ./openhab_logs/
        else
          echo "OpenHAB container not found"
          
    - name: Upload log files
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: |
          run/conf_testing/log/
          openhab_logs/
        retention-days: 7
        if-no-files-found: warn